/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/3dmodels/untitled.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    White_board001_Cube026_1: THREE.Mesh
    White_board001_Cube026_1_1: THREE.Mesh
    White_board_Cube045_1: THREE.Mesh
    White_board_Cube045_1_1: THREE.Mesh
  }
  materials: {
    ['1A1A1A']: THREE.MeshStandardMaterial
    ['455A64']: THREE.MeshStandardMaterial
    ['000000']: THREE.MeshStandardMaterial
    F44336: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/untitled.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.White_board001_Cube026_1.geometry} material={materials['1A1A1A']} />
      <mesh geometry={nodes.White_board001_Cube026_1_1.geometry} material={materials['455A64']} />
      <mesh geometry={nodes.White_board_Cube045_1.geometry} material={materials['000000']} />
      <mesh geometry={nodes.White_board_Cube045_1_1.geometry} material={materials.F44336} />
    </group>
  )
}

useGLTF.preload('/untitled.glb')
